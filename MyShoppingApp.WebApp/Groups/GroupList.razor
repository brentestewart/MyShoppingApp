@rendermode InteractiveServer
@page "/groups"
@using MyShoppingApp.WebApp.Groups
@using MyShoppingApp.WebApp.Components.Core
@inherits ViewModelComponentBase<GroupListViewModel>
@inject NavigationManager NavigationManager
@inject IJSRuntime JS

<PageTitle>Groups</PageTitle>

<h3>Groups</h3>

@if (ViewModel.ErrorMessage is not null)
{
    <div class="alert alert-danger">@ViewModel.ErrorMessage</div>
}

<button class="btn btn-primary mb-3" type="button" @onclick="NavigateToCreate">Create Group</button>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var group in ViewModel.Groups)
        {
            <tr>
                <td>@group.Name</td>
                <td>@group.Description</td>
                <td>
                    <button class="btn btn-sm btn-secondary me-2" @onclick="() => NavigateToEdit(group.Id)">Edit</button>
                    <button class="btn btn-sm btn-danger" @onclick="() => ConfirmAndDelete(group.Id)">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    protected override async Task OnInitializedAsync()
    {
        await ViewModel.LoadAsync();
    }

    private void NavigateToCreate() => NavigationManager.NavigateTo("/groups/create");
    private void NavigateToEdit(Guid id) => NavigationManager.NavigateTo($"/groups/edit/{id}");

    private async Task ConfirmAndDelete(Guid id)
    {
        bool confirmed = await JS.InvokeAsync<bool>("confirm", $"Are you sure you want to delete this group?");
        if (confirmed)
        {
            await ViewModel.DeleteAsync(id);
        }
    }
} 