@using static Microsoft.AspNetCore.Components.Web.RenderMode
@rendermode InteractiveServer
@page "/stores/create"
@using MyShoppingApp.WebApp.Stores
@using MyShoppingApp.WebApp.Components.Core
@inherits ViewModelComponentBase<CreateStoreViewModel>
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components

<h3>Create Store</h3>

@code {
    private bool _showAddress = false;
    private void ToggleAddress()
    {
        _showAddress = !_showAddress;
    }
}

<EditForm Model="ViewModel.Store" OnValidSubmit="ViewModel.CreateAsync" FormName="CreateStoreForm">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3">
        <label class="form-label">Name:</label>
        <InputText class="form-control" @bind-Value="ViewModel.Store.Name" />
    </div>
    <div class="mb-3">
        <label class="form-label">Description:</label>
        <InputText class="form-control" @bind-Value="ViewModel.Store.Description" />
    </div>
    <button class="btn btn-outline-secondary mb-3" type="button" @onclick="ToggleAddress">
        @(_showAddress ? "Hide Address Details" : "Show Address Details")
    </button>
    @if (_showAddress)
    {
        <div class="card card-body mb-3">
            <div class="mb-3">
                <label class="form-label">Street:</label>
                <InputText class="form-control" @bind-Value="ViewModel.Store.Address.Street" />
            </div>
            <div class="mb-3">
                <label class="form-label">City:</label>
                <InputText class="form-control" @bind-Value="ViewModel.Store.Address.City" />
            </div>
            <div class="mb-3">
                <label class="form-label">State:</label>
                <InputText class="form-control" @bind-Value="ViewModel.Store.Address.State" />
            </div>
            <div class="mb-3">
                <label class="form-label">Zip Code:</label>
                <InputText class="form-control" @bind-Value="ViewModel.Store.Address.ZipCode" />
            </div>
        </div>
    }
    <div class="mb-3">
        <label class="form-label">Website:</label>
        <InputText class="form-control" @bind-Value="ViewModel.Store.Website" />
    </div>
    <div class="mb-3">
        <label class="form-label">Aisles (comma separated):</label>
        <InputText class="form-control" @bind-Value="ViewModel.AislesInput" />
    </div>
    <div class="mb-3">
        <label class="form-label">Group Id:</label>
        <InputText class="form-control" @bind-Value="ViewModel.GroupIdInput" />
    </div>
    <button type="submit" class="btn btn-primary">Create</button>
</EditForm>

@if (!string.IsNullOrEmpty(ViewModel.Message))
{
    <div>@ViewModel.Message</div>
}

<a href="/stores">Back to Store List</a> 