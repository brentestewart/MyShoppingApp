@using static Microsoft.AspNetCore.Components.Web.RenderMode
@rendermode InteractiveServer
@page "/stores/edit/{Id:guid}"
@using MyShoppingApp.WebApp.Stores
@using MyShoppingApp.WebApp.Components.Core
@inherits ViewModelComponentBase<EditStoreViewModel>
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Forms

<h3>Edit Store</h3>

@if (ViewModel.IsLoading)
{
    <p>Loading...</p>
}
else
{
    <EditForm Model="ViewModel.Store" OnValidSubmit="ViewModel.UpdateAsync" FormName="EditStoreForm">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div>
            <label>Name:</label>
            <InputText @bind-value="ViewModel.Store.Name" />
        </div>
        <div>
            <label>Description:</label>
            <InputText @bind-value="ViewModel.Store.Description" />
        </div>
        <div>
            <label>Street:</label>
            <InputText @bind-value="ViewModel.Store.Address.Street" />
        </div>
        <div>
            <label>City:</label>
            <InputText @bind-value="ViewModel.Store.Address.City" />
        </div>
        <div>
            <label>State:</label>
            <InputText @bind-value="ViewModel.Store.Address.State" />
        </div>
        <div>
            <label>Zip Code:</label>
            <InputText @bind-value="ViewModel.Store.Address.ZipCode" />
        </div>
        <div>
            <label>Website:</label>
            <InputText @bind-value="ViewModel.Store.Website" />
        </div>
        <div>
            <label>Aisles (comma separated):</label>
            <InputText @bind-value="ViewModel.AislesInput" />
        </div>
        <div>
            <label>Group Id:</label>
            <InputText @bind-value="ViewModel.GroupIdInput" />
        </div>
        <button type="submit">Update</button>
    </EditForm>

    <button class="btn btn-danger" @onclick="ShowDeleteDialog">Delete</button>

    @if (ShowDeleteConfirmation)
    {
        <div class="modal-backdrop">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Confirm Delete</h5>
                    </div>
                    <div class="modal-body">
                        <p>Are you sure you want to delete this store?</p>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-danger" @onclick="ConfirmDelete">Delete</button>
                        <button class="btn btn-secondary" @onclick="CancelDelete">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
    }
}

@if (!string.IsNullOrEmpty(ViewModel.Message))
{
    <div>@ViewModel.Message</div>
}

<a href="/stores">Back to Store List</a>

@code {
    [Parameter]
    public Guid Id { get; set; }

    [Inject]
    private NavigationManager Navigation { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        await ViewModel.LoadAsync(Id);
    }

    private bool ShowDeleteConfirmation = false;

    private void ShowDeleteDialog()
    {
        ShowDeleteConfirmation = true;
    }

    private void CancelDelete()
    {
        ShowDeleteConfirmation = false;
    }

    private async Task ConfirmDelete()
    {
        var success = await ViewModel.DeleteAsync();
        if (success)
        {
            Navigation.NavigateTo("/stores");
        }
        else
        {
            ShowDeleteConfirmation = false;
        }
    }
} 